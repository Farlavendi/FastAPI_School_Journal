services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi
    restart: always
    volumes:
      - ./src:/app/src
    ports:
      - "8000:8000"
    environment:
      APP_CONFIG__DB__URL: ${APP_CONFIG__DB__URL}
      TASKIQ_URL: ${TASKIQ_URL}
    depends_on:
      postgres:
        condition: service_healthy
  
  postgres:
    image: postgres:17.2-alpine
    container_name: postgres
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATA: /var/lib/postgresql/data
    expose:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:4-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RMQ_PASSWORD}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  maildev:
    image: maildev/maildev
    container_name: maildev
    environment:
      TZ: ${MAILDEV_TZ}
      MAILDEV_WEB_PORT: 1080
      MAILDEV_SMTP_PORT: 1025
    ports:
      - "8080:1080"
      - "1025:1025"
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

volumes:
  postgres-data:
  rabbitmq-data:
